//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.AsyncProperites.Input
{
	using System.Threading;
	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class ListGetter
	{
		public async Task TestAsync(CancellationToken cancellationToken = default(CancellationToken))
		{
			if ((await (GetListAsync(cancellationToken))).Count > 0 || (await (GetListAsync(cancellationToken))).Contains("") || (await (new ListGetter().GetListAsync(cancellationToken))).Count > 0)
			{
				return;
			}
		}

		public async Task<List<string>> GetListAsync(CancellationToken cancellationToken = default(CancellationToken))
		{
			await (SimpleFile.ReadAsync(cancellationToken));
			return new List<string>();
		}
	}
}
