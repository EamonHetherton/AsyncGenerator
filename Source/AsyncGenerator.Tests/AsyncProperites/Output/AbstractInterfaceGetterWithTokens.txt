//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.AsyncProperites.Input
{
	using System.Threading;
	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class TestAbstractInterfaceGetter
	{
		protected Task TestAsync(CancellationToken cancellationToken = default(CancellationToken))
		{
			return SimpleFile.ReadAsync(cancellationToken);
		}
	}

	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class ConcreteAbstractInterfaceGetter : AbstractInterfaceGetter
	{
		public override async Task<bool> GetSuccessAsync(CancellationToken cancellationToken = default(CancellationToken))
		{
			await (SimpleFile.ReadAsync(cancellationToken));
			return true;
		}
	}

	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class Concrete2AbstractInterfaceGetter : AbstractInterfaceGetter
	{
		public override Task<bool> GetSuccessAsync(CancellationToken cancellationToken = default(CancellationToken)) => Task.FromResult<bool>(true);
	}

	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class Concrete3AbstractInterfaceGetter : AbstractInterfaceGetter
	{
		public override Task<bool> GetSuccessAsync(CancellationToken cancellationToken = default(CancellationToken)) => Task.FromResult<bool>(false);
	}

	/// <content>
	/// Contains generated async methods
	/// </content>
	public abstract partial class AbstractInterfaceGetter : IAbstractInterfaceGetter
	{
		public abstract Task<bool> GetSuccessAsync(CancellationToken cancellationToken = default(CancellationToken));
	}

	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial interface IAbstractInterfaceGetter
	{
		Task<bool> GetSuccessAsync(CancellationToken cancellationToken = default(CancellationToken));
	}
}
