//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.NewTypes.Input
{
	using System.Threading;
	#if TEST
	public class MissingMembersAsync : IExternalInterface
	{
		public class NestedClass : IExternalInterface
		{
			public Task MethodAsync()
			{
				return Task.CompletedTask;
			}
			public void Method()
			{
			}

			public Task<bool> Method2Async(CancellationToken cancellationToken)
			{
				return SimpleFile.WriteAsync("");
			}

			public bool Method2()
			{
				return SimpleFile.Write("");
			}

			public Task<bool> Method3Async(CancellationToken cancellationToken = default(CancellationToken))
			{
				try
				{
					return Task.FromResult<bool>(false);
				}
				catch (Exception ex)
				{
					return Task.FromException<bool>(ex);
				}
			}

			public bool Method3()
			{
				return false;
			}
		}

		public Task MethodAsync()
		{
			return SimpleFile.ReadAsync(CancellationToken.None);
		}

		public void Method()
		{
			SimpleFile.Read();
		}

		public Task<bool> Method2Async(CancellationToken cancellationToken)
		{
			return SimpleFile.WriteAsync("");
		}

		public bool Method2()
		{
			return SimpleFile.Write("");
		}

		public Task<bool> Method3Async(CancellationToken cancellationToken = default(CancellationToken))
		{
			return Method2Async(cancellationToken);
		}

		public bool Method3()
		{
			return Method2();
		}

		public Task ReadAsync()
		{
			return MethodAsync();
		}
	}
		/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class MissingMembers : IExternalInterface
	{
		/// <content>
		/// Contains generated async methods
		/// </content>
		public partial class NestedClass : IExternalInterface
		{
			public Task MethodAsync()
			{
				return Task.CompletedTask;
			}

			public Task<bool> Method2Async(CancellationToken cancellationToken)
			{
				return SimpleFile.WriteAsync("");
			}

			public Task<bool> Method3Async(CancellationToken cancellationToken = default(CancellationToken))
			{
				try
				{
					return Task.FromResult<bool>(false);
				}
				catch (Exception ex)
				{
					return Task.FromException<bool>(ex);
				}
			}
		}

		public Task MethodAsync()
		{
			return SimpleFile.ReadAsync(CancellationToken.None);
		}

		public Task<bool> Method2Async(CancellationToken cancellationToken)
		{
			return SimpleFile.WriteAsync("");
		}

		public Task<bool> Method3Async(CancellationToken cancellationToken = default(CancellationToken))
		{
			return Method2Async(cancellationToken);
		}
	}
	#endif
}
