solution:
  filePath: ..\..\..\ExternalProjects\NHibernate\Source\src\NHibernate.sln
  concurrentRun: true
  applyChanges: true
  projects:
  - name: NHibernate
    analyzation:
      methodConversion:
      - hasAttributeName: ObsoleteAttribute
      - name: PostProcessInsert
        containingTypeName: HqlSqlWalker
      - name: Intercept
        containingTypeName: IInterceptor
      - name: Intercept
        containingTypeName: IFieldInterceptor
      - name: InitializeOrGetAssociation
        containingTypeName: AbstractFieldInterceptor
      - name: InitializeLazyProperty
        containingTypeName: ILazyPropertyInitializer
      - name: InitializeLazyPropertiesFromDatastore
        containingTypeName: AbstractEntityPersister
      - name: InitializeLazyPropertiesFromCache
        containingTypeName: AbstractEntityPersister
      - name: Invoke
        containingTypeName: BasicLazyInitializer
      - name: SetReadOnly
        containingTypeName: StatefulPersistenceContext
      - name: Unproxy
        containingTypeName: StatefulPersistenceContext
      - name: Contains
        containingTypeName: CollectionType
      - name: GuessClass
        containingTypeName: NHibernateProxyHelper
      - name: IsPropertyInitialized
        containingTypeName: NHibernateUtil
      - name: BestGuessEntityName
        containingTypeName: ISession
      - name: Contains
        containingTypeName: ISession
      - name: BestGuessEntityName
        containingTypeName: ISessionImplementor
      - name: Contains
        containingTypeName: ISessionImplementor
      - name: GetUnsavedVersionValue
        containingTypeName: UnsavedValueFactory
      - name: ReadSize
        containingTypeName: AbstractPersistentCollection
      - name: ReadIndexExistence
        containingTypeName: AbstractPersistentCollection
      - name: ReadElementExistence
        containingTypeName: AbstractPersistentCollection
      - name: ReadElementByIndex
        containingTypeName: AbstractPersistentCollection
      - name: Read
        containingTypeName: AbstractPersistentCollection
      - name: Write
        containingTypeName: AbstractPersistentCollection
      - name: GetSize
        containingTypeName: ICollectionPersister
      - name: IndexExists
        containingTypeName: ICollectionPersister
      - name: ElementExists
        containingTypeName: ICollectionPersister
      - name: GetElementByIndex
        containingTypeName: ICollectionPersister
      - name: Exists
        containingTypeName: ICollectionPersister
      - name: Exists
        containingTypeName: AbstractCollectionPersister
      - conversion: ToAsync
        name: ExecuteReader
        containingTypeName: IBatcher
      - conversion: ToAsync
        name: ExecuteNonQuery
        containingTypeName: IBatcher
      - conversion: ToAsync
        rule: EventListener
      preserveReturnType: []
      typeConversion: []
      documentSelection: []
      searchForAsyncCounterparts:
      - name: GetFieldValue
      - name: IsDBNull
      - name: WriteLine
      callForwarding: true
      cancellationTokens:
        guards: true
        methodParameter:
        - anyInterfaceRule: PubliclyExposedType
        - rule: PubliclyExposedType
        - parameter: Required
        requiresCancellationToken:
        - tokenRequired: true
          rule: EventListener
      scanMethodBody: true
      scanForMissingAsyncMembers: []
    transformation:
      configureAwaitArgument: false
      localFunctions: true
      asyncLock:
        fullTypeName: NHibernate.Util.AsyncLock
        methodName: LockAsync
    registerPlugin:
    - fullTypeName: AsyncGenerator.Tests.ExternalProjects.NHibernate.TransactionScopeRewriter
      assemblyName: AsyncGenerator.Tests
  - name: NHibernate.DomainModel
    analyzation:
      methodConversion: []
      preserveReturnType: []
      typeConversion: []
      documentSelection: []
      searchForAsyncCounterparts: []
      cancellationTokens:
        methodParameter: []
        requiresCancellationToken: []
      scanMethodBody: true
      scanForMissingAsyncMembers:
      - scan: true
    transformation:
      asyncLock: {}
    registerPlugin: []
  - name: NHibernate.Test
    analyzation:
      methodConversion:
      - hasAttributeName: IgnoreAttribute
      - conversion: Smart
        hasAttributeName: TestAttribute
      preserveReturnType:
      - preserve: true
        hasAttributeName: TestAttribute
      typeConversion:
      - name: NorthwindDbCreator
      - name: ObjectAssert
      - name: LinqReadonlyTestsContext
      - hasAttributeName: IgnoreAttribute
      - conversion: NewType
        hasAttributeName: TestFixtureAttribute
      - rule: IsTestCase
      - anyBaseTypeRule: IsTestCase
      documentSelection:
      - filePathEndsWith: Linq\MathTests.cs
      - filePathEndsWith: Linq\ExpressionSessionLeakTest.cs
      searchForAsyncCounterparts: []
      cancellationTokens:
        methodParameter: []
        requiresCancellationToken:
        - hasAttributeName: TestAttribute
      scanMethodBody: true
      scanForMissingAsyncMembers:
      - scan: true
        anyInterfaceRule: NHibernateAssembly
    transformation:
      asyncLock: {}
    registerPlugin:
    - fullTypeName: AsyncGenerator.Tests.ExternalProjects.NHibernate.TransactionScopeRewriter
      assemblyName: AsyncGenerator.Tests
    - fullTypeName: AsyncGenerator.Tests.ExternalProjects.NHibernate.LinqAsyncCounterpartsFinder
      assemblyName: AsyncGenerator.Tests
    - fullTypeName: AsyncGenerator.Tests.ExternalProjects.NHibernate.NUnitAsyncCountepartFinder
      assemblyName: AsyncGenerator.Tests
methodRules:
- filters:
  - containingTypeName: IAutoFlushEventListener
  - containingTypeName: IFlushEventListener
  - containingTypeName: IDeleteEventListener
  - containingTypeName: ISaveOrUpdateEventListener
  - containingTypeName: IPostCollectionRecreateEventListener
  - containingTypeName: IPostCollectionRemoveEventListener
  - containingTypeName: IPostCollectionUpdateEventListener
  - containingTypeName: IPostDeleteEventListener
  - containingTypeName: IPostInsertEventListener
  - containingTypeName: IPostUpdateEventListener
  - containingTypeName: IPreCollectionRecreateEventListener
  - containingTypeName: IPreCollectionRemoveEventListener
  - containingTypeName: IPreCollectionUpdateEventListener
  - containingTypeName: IPreDeleteEventListener
  - containingTypeName: IPreInsertEventListener
  - containingTypeName: IPreLoadEventListener
  - containingTypeName: IPreUpdateEventListener
  name: EventListener
- filters:
  - containingNamespace: NHibernate
  - containingType: NHibernate.Tool.hbm2ddl.SchemaUpdate
  - containingType: NHibernate.Tool.hbm2ddl.SchemaValidator
  - containingType: NHibernate.Tool.hbm2ddl.SchemaExport
  name: PubliclyExposedType
typeRules:
- filters:
  - containingAssemblyName: NHibernate
  name: NHibernateAssembly
- filters:
  - name: TestCase
  name: IsTestCase
