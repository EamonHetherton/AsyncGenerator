//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;
using NUnit.Framework;

namespace AsyncGenerator.Tests.Formatting.Input
{
	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class Async
	{
		public void TestAsync()
		{
			Assert.DoesNotThrowAsync(
				async () =>
				{
					await (SimpleFile.ReadAsync());
					await (SimpleFile.ReadAsync());
				});

			Assert.DoesNotThrowAsync(
				async delegate ()
				{
					await (SimpleFile.ReadAsync());
					await (SimpleFile.ReadAsync());
				});

			Runner.RunWithParameter(
				async obj =>
				{
					await (SimpleFile.ReadAsync());
					await (SimpleFile.ReadAsync());
				});

			async void LocalDoubleRead()
			{
				await (SimpleFile.ReadAsync());
				await (SimpleFile.ReadAsync());
			}
		}

		async Task DoubleReadAsync()
		{
			await (SimpleFile.ReadAsync());
			await (SimpleFile.ReadAsync());
		}

		static async Task StaticDoubleReadAsync()
		{
			await (SimpleFile.ReadAsync());
			await (SimpleFile.ReadAsync());
		}

		public async Task PublicDoubleReadAsync()
		{
			await (SimpleFile.ReadAsync());
			await (SimpleFile.ReadAsync());
		}
	}
}
