//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.IO;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.SimpleReference.Input
{
	using System.Threading.Tasks;
	using System.Threading;
	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class TestCase
	{
		public Task CallCallReadFileAsync(CancellationToken cancellationToken)
		{
			return CallReadFileAsync(cancellationToken);
		}
		public Task CallCallReadFileAsync()
		{
			return CallCallReadFileAsync(CancellationToken.None);
		}

		public Task CallReadFileAsync(CancellationToken cancellationToken)
		{
			return ReadFileAsync(cancellationToken);
		}

		public Task CallReadFileAsync()
		{
			return CallReadFileAsync(CancellationToken.None);
		}

		/// <summary>
		/// Use <see cref="SimpleFile.ReadAsync(CancellationToken)"/> to read a file
		/// </summary>
		/// <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
		public Task ReadFileAsync(CancellationToken cancellationToken)
		{
			return SimpleFile.ReadAsync(cancellationToken);
		}

		/// <summary>
		/// Use <see cref="SimpleFile.ReadAsync(CancellationToken)"/> to read a file
		/// </summary>
		public Task ReadFileAsync()
		{
			return ReadFileAsync(CancellationToken.None);
		}

	}
}