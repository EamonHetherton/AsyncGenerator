//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.LockStatement.Input
{
	/// <content>
	/// Contains generated async methods
	/// </content>
	public partial class Lock
	{
		private readonly Test.MyAsyncLock _lockAsync = new Test.MyAsyncLock();
		private static readonly Test.MyAsyncLock StaticLockAsync = new Test.MyAsyncLock();
		private static readonly Test.MyAsyncLock LockLockAsync = new Test.MyAsyncLock();

		public async Task TestAsync()
		{
			using (await LockLockAsync.LockAsync())
			{
				await (SimpleFile.ReadAsync());
			}

			lock (typeof(Lock))
			{
				Console.WriteLine("Test");
			}

			using (await LockLockAsync.LockAsync())
				await (SimpleFile.ReadAsync());

			using (await _lockAsync.LockAsync())
			{
				using (await LockLockAsync.LockAsync())
				{
					await (SimpleFile.ReadAsync());
				}

				using (await StaticLockAsync.LockAsync())
				{
					await (SimpleFile.ReadAsync());
				}
			}

			using (await _lockAsync.LockAsync())
				await (SimpleFile.ReadAsync());
		}

		public async Task Test2Async()
		{
			using (await LockLockAsync.LockAsync())
			{
				await (SimpleFile.ReadAsync());

				using (await StaticLockAsync.LockAsync())
				{
					await (SimpleFile.ReadAsync());
				}
			}

			using (await _lockAsync.LockAsync())
				await (SimpleFile.ReadAsync());
		}
	}
}
